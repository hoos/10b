<?xml version="1.0"?>

<!-- 
  Ant build file for 10b.                                            
  Auther Hussein Hosseini Badakhchani (Hoos).                                         
-->

<project name="10b" default="test" basedir=".">

  <description>
    10b (pronounced Twobit) is an algorythmic trading application.
  </description>


  <!--
    Project directories.
  -->
  <property name="build.dir" location="${basedir}/build"/>
  <property name="dist.dir" location="${basedir}/dist"/>
  <property name="etc.dir" location="${basedir}/etc"/>
  <property name="lib.dir" location="${basedir}/lib"/>
  <property name="src.dir" location="${basedir}/src"/>
  <property name="thirdparty.dir" location="${basedir}/thirdparty"/>
  <property name="build.classes.dir" location="${build.dir}/classes"/>
  <property name="test.reports.dir" location="${build.dir}/reports"/>
  <property name="project.dir" location="${dist.dir}/${ant.project.name}"/>
  <property name="project.lib.dir" location="${project.dir}/lib"/>
  <property name="distribution.dir" location="${etc.dir}/distribution"/>

  <!--
    Javac compiler options.
  -->
  <property name="optimize" value="true"/>
  <property name="debug" value="false"/>
  <property name="deprecation" value="on"/>

  <!-- 
   All dependant libraries are located in the project library directory ${lib.dir}
  -->
  <path id="classpath">
    <fileset dir="${lib.dir}">
      <include name="**/*.jar"/>
    </fileset>
    <pathelement location="${project.lib..dir}/${ant.project.name}.jar"/>
    <pathelement location="${project.lib.dir}/${ant.project.name}-test.jar"/>
  </path>

  <!-- 
   Create the project directory structure.
   -->
  <target name="create" description="  - (create)s the project directory structure">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${dist.dir}"/>
    <mkdir dir="${etc.dir}"/>
    <mkdir dir="${lib.dir}"/>
    <mkdir dir="${src.dir}"/>
    <mkdir dir="${thirdparty.dir}"/>
    <mkdir dir="${project.dir}"/>
    <mkdir dir="${project.lib.dir}"/>
    <mkdir dir="${distribution.dir}"/>
    <mkdir dir="${distribution.dir}/docs"/>
    <mkdir dir="${distribution.dir}/etc"/>
  </target>

  <!-- 
   Create a time stamp for the build.
   -->
  <target name="init">
    <tstamp/>
  </target>

  <!-- 
   Compile the java source code.
   -->
  <target name="comp" depends="clean, init" 
          description="  - (comp)iles the source code">
    <mkdir dir="${build.classes.dir}"/>
    <javac srcdir="${src.dir}" destdir="${build.classes.dir}"
           optimize="${optimize}" debug="${debug}"  deprecation="${deprecation}"
           bootclasspath="${bootclasspath}" classpathref="classpath" includeantruntime="false">
    </javac>
  </target>

  <!-- 
   Create a distribution of Genesis.
   -->
  <target name="dist" depends="comp"
          description="  - creates a (dist)ribution package of 10b">
    <copy todir="${project.dir}">
      <fileset dir="${distribution.dir}"/>
      <fileset dir="${basedir}" includes="**/thirdparty/**"/>
    </copy>
    <chmod file="${project.dir}/10b" perm="ugo+rx"/>
    <chmod dir="${thirdparty.dir}/apache-ant-1.8.2/bin" 
           includes="*" perm="ug+rx"/>
    <jar basedir="${build.classes.dir}"
         jarfile="${project.lib.dir}/${ant.project.name}.jar"
         manifest="${etc.dir}/MANIFEST.MF"
         excludes="**/*Test.class">
    </jar>
    <jar basedir="${build.classes.dir}"
         jarfile="${project.lib.dir}/${ant.project.name}-test.jar"
         manifest="${etc.dir}/MANIFEST.MF"
         includes="**/*Test.class">
    </jar>
  </target>

  <!-- 
   Test the java source code.
   -->
  <target name="test" depends="dist" 
          description="  - (test)s the distribution">
      <mkdir dir="${test.reports.dir}"/>
      <junit printsummary="yes" haltonfailure="yes">
        <classpath>
          <path refid="classpath"/>
        </classpath>
        <formatter type="xml"/>
        <batchtest fork="no" todir="${test.reports.dir}">
          <fileset dir="${build.classes.dir}">
            <include name="**/*Test*.class"/>
          </fileset>
        </batchtest>
      </junit>
  </target>

  <!--
   Clean build       
   -->
  <target name="clean" description="  - (clean)s the build">
    <echo message="${ant.project.name}"/>
    <delete dir="${build.dir}"/>
    <delete dir="${dist.dir}"/>
  </target>

</project>
